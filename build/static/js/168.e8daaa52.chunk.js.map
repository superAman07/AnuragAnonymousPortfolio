{"version":3,"file":"static/js/168.e8daaa52.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","const noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { progress } from '../../../../utils/progress.mjs';\n\n// Create a linear easing point for every 10 ms\nconst resolution = 10;\nconst generateLinearEasing = (easing, duration // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.11.9\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    if (!visualElement.applyWillChange)\n        return;\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = new Set();\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const name in target) {\n                    const memberName = getWillChangeName(name);\n                    if (memberName) {\n                        willChange.add(memberName);\n                    }\n                }\n            });\n        }\n        if (willChange.size) {\n            values.willChange = Array.from(willChange).join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.11.9\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.11.9 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","noop","any","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","_len","transformers","_key","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","generateLinearEasing","points","numPoints","segmentEasing","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","applyWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","assign","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","handleEvent","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","MotionConfigContext","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","getWillChangeName","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","forEachDefinition","list","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","memberName","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","createDomVisualElement"],"sourceRoot":""}